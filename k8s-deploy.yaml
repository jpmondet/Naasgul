---
apiVersion: v1
kind: Namespace
metadata:
  name: naasgul
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: naasgul
  namespace: naasgul
---
#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: naasgul
rules:
- apiGroups:
  - ""
  resources:
  - ""
  verbs:
  - ""
---
#apiVersion: rbac.authorization.k8s.io/v1beta1
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: naasgul
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: naasgul
subjects:
- kind: ServiceAccount
  name: naasgul
  namespace: naasgul
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: naasgul-api
  namespace: naasgul
  labels:
    k8s-app: naasgul-api
spec:
  replicas: 3
  selector:
    matchLabels:
      k8s-app: naasgul-api
  template:
    metadata:
      labels:
        k8s-app: naasgul-api
    spec:
      containers:
      - name: naasgul
        image: naasgul_api:latest
        #args: ["/naasgul"]
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_STRING
          value: "mongodb://naasgul-mongodb:27017/"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 80
          initialDelaySeconds: 10
          periodSeconds: 3
        ports:
          - containerPort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: naasgul-topo-scrapper
  namespace: naasgul
  labels:
    k8s-app: naasgul-topo-scrapper
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: naasgul-topo-scrapper
  template:
    metadata:
      labels:
        k8s-app: naasgul-topo-scrapper
    spec:
      containers:
      - name: naasgul
        image: naasgul_topo_scrapper_snmp:latest
        #args: ["/naasgul"]
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_STRING
          value: "mongodb://naasgul-mongodb:27017/"
        - name: LLDP_INIT_NODE_FQDN
          value: "" # CI_VAR to add here
        - name: LLDP_INIT_NODE_IP
          value: "" # CI_VAR to add here
        - name: LLDP_INIT_NODE_PORT
          value: "" # CI_VAR to add here
        - name: LLDP_STOP_NODES_FQDN
          value: "" # CI_VAR to add here
        - name: LLDP_STOP_NODES_IP
          value: "" # CI_VAR to add here
        - name: SNMP_USER
          valueFrom:
            secretKeyRef:
              name: snmpcreds
              key: snmp-user
          # kubectl create secret generic db-user-pass \
          #         --from-literal=username=devuser \
          #         --from-literal=password='S!B\*d$zDsb='
        - name: SNMP_AUTH_PWD
          valueFrom:
            secretKeyRef:
              name: snmpcreds
              key: snmp-auth-pwd
        - name: SNMP_PRIV_PWD
          valueFrom:
            secretKeyRef:
              name: snmpcreds
              key: snmp-priv-pwd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: naasgul-stats-scrapper
  namespace: naasgul
  labels:
    k8s-app: naasgul-stats-scrapper
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: naasgul-stats-scrapper
  template:
    metadata:
      labels:
        k8s-app: naasgul-stats-scrapper
    spec:
      containers:
      - name: naasgul
        image: naasgul_stats_crawler_snmp:latest
        #args: ["/naasgul"]
        imagePullPolicy: IfNotPresent
        env:
        - name: DB_STRING
          value: "mongodb://naasgul-mongodb:27017/"
        - name: SNMP_USER
          valueFrom:
            secretKeyRef:
              name: snmpcreds
              key: snmp-user
        - name: SNMP_AUTH_PWD
          valueFrom:
            secretKeyRef:
              name: snmpcreds
              key: snmp-auth-pwd
        - name: SNMP_PRIV_PWD
          valueFrom:
            secretKeyRef:
              name: snmpcreds
              key: snmp-priv-pwd
---
#
# THIS MONGODB DEPLOYMENT IS FOR DEV PURPOSES AND SHOULDN'T BE USED IN PRODUCTION
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: naasgul-mongodb
  namespace: naasgul
  labels:
    k8s-app: naasgul-mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: naasgul-mongodb
  template:
    metadata:
      labels:
        k8s-app: naasgul-mongodb
    spec:
      containers:
      - name: naasgul
        image: mongo:4.4.3-bionic
        imagePullPolicy: IfNotPresent
        env:
        - name: PUID
          value: "1000"
        - name: PGID
          value: "1000"
        ports:
          - containerPort: 27017
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: naasgul-frontend
  namespace: naasgul
  labels:
    k8s-app: naasgul-frontend
spec:
  replicas: 3
  selector:
    matchLabels:
      k8s-app: naasgul-frontend
  template:
    metadata:
      labels:
        k8s-app: naasgul-frontend
    spec:
      containers:
      - name: naasgul
        image: naasgul_frontend:latest
        #args: ["/naasgul"]
        imagePullPolicy: IfNotPresent
        env:
        - name: NAASGUL_API_URL
          value: "http://naasgul-api:8080"
        ports:
          - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: naasgul-frontend
  namespace: naasgul
spec:
  selector:
    k8s-app: naasgul-frontend
  ports:
  - port: 80
---
kind: Service
apiVersion: v1
metadata:
  name: naasgul-mongodb
  namespace: naasgul
spec:
  selector:
    k8s-app: naasgul-mongodb
  ports:
  - port: 27017
---
kind: Service
apiVersion: v1
metadata:
  name: naasgul-api
  namespace: naasgul
spec:
  selector:
    k8s-app: naasgul-api
  ports:
  - port: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: naasgul-frontend
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
  namespace: naasgul
spec:
  rules:
  - http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: naasgul-frontend
            port:
              number: 80
---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: naasgul-frontend-src
#  annotations:
#    # use the shared ingress-nginx
#    kubernetes.io/ingress.class: "nginx"
#    nginx.ingress.kubernetes.io/rewrite-target: /src
#  namespace: naasgul
#spec:
#  rules:
#  - http:
#      paths:
#      - path: /naasgul
#        pathType: Prefix
#        backend:
#          service:
#            name: naasgul-frontend
#            port:
#              number: 80
